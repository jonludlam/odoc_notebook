 (executable
  (modes js)
  (name main)
  (modules main)
  (promote (until-clean))
  (link_flags (-linkall))
  (libraries frontend))

(library
 (name frontend)
 (public_name odoc_notebook.frontend)
 (modes byte)
 (modules frontend)
 (preprocess
  (pps ppx_deriving_yojson))
 (libraries
  code-mirror
  astring
  js_top_worker-client_fut
  tyxml
  merlin-js.code-mirror
  js_of_ocaml-lwt
  brr
  note.brr
  ))

(library
 (name toploop)
 (public_name odoc_notebook.toploop)
 (modules toploop)
 (wrapped false))

(rule
 (target frontend_crunch.ml)
 (deps main.bc.js)
 (action
  (run ocaml-crunch . -m plain --ext js -o %{target} ))
 )

 (library 
 (name frontend_crunch)
( modules frontend_crunch))